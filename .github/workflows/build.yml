name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            packages/client-rust/target
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Run tests
        working-directory: packages/client-rust
        run: cargo test --verbose

  build-dev:
    name: Build Development Binaries
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        target:
          - armv7-unknown-linux-gnueabihf # Primary target for Mi devices
          - x86_64-unknown-linux-gnu      # For local testing
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf
          
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
        
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            packages/client-rust/target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          
      - name: Build binaries
        working-directory: packages/client-rust
        run: |
          cross build --release --target ${{ matrix.target }} --bin http_client
          cross build --release --target ${{ matrix.target }} --bin http_server
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dev-binaries-${{ matrix.target }}
          path: packages/client-rust/target/${{ matrix.target }}/release/http_*
          retention-days: 7
